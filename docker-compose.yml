version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword
      - MONGO_INITDB_DATABASE=mern-app
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:27017/mern-app --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - mern-network

  # Backend (Node.js + Express)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: mern-backend
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://root:rootpassword@mongodb:27017/mern-app?authSource=admin
      - JWT_SECRET=7c142af3ea1dd1067c18161e6b1ed629303b6cce55bd11e2344185c10f30388f
      - PORT=8080
    volumes:
      - ./server:/app
      - /app/node_modules
      - server-images:/app/images
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - mern-network

  # Frontend (React)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: mern-frontend
    restart: always
    depends_on:
      server:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8080
      - PORT=3000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - mern-network

networks:
  mern-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
  server-images:
    driver: local 